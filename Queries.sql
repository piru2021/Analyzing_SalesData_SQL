use SalesData;



--  Calculate the total revenue generated by the company in the last quarter.

SELECT SUM(oi.price * oi.quantity) AS revenue
FROM orders o
JOIN order_items oi ON o.id = oi.order_id
WHERE o.order_date >= DATEADD(day, -90, GETDATE());

--  Calculate the total revenue generated by each category in the last quarter.

SELECT p.category, SUM(oi.quantity * oi.price) as revenue
FROM orders o
JOIN order_items oi ON o.id = oi.order_id
JOIN products p ON oi.product_id = p.id
WHERE o.order_date >= DATEADD(day, -90, GETDATE())
GROUP BY p.category;


--  Calculate the total revenue generated by each customer in the last quarter.

SELECT c.name, SUM(oi.quantity * oi.price) as revenue
FROM orders o
JOIN order_items oi ON o.id = oi.order_id
JOIN customers c ON o.customer_id = c.id
WHERE o.order_date >= DATEADD(day, -90, GETDATE())
GROUP BY c.name;

--  Calculate the total number of orders placed by each customer in the last quarter.

SELECT customer_id, COUNT(*) AS num_orders
FROM orders
WHERE order_date >= DATEADD(qq, DATEDIFF(qq, 0, GETDATE()) - 1, 0)
GROUP BY customer_id;

--  Top 5 best-selling products within each product category, based on the total quantity sold in the last quarter.  

WITH top_products AS (
  SELECT 
    p.id, 
    p.name, 
    SUM(oi.quantity) AS total_quantity
  FROM 
    orders o 
    JOIN order_items oi ON o.id = oi.order_id 
    JOIN products p ON oi.product_id = p.id 
  WHERE 
    o.order_date >= DATEADD(qq, DATEDIFF(qq, 0, GETDATE()) - 1, 0)
  GROUP BY 
    p.id, 
    p.name
),
ranked_products AS (
  SELECT 
    id, 
    name, 
    total_quantity, 
    ROW_NUMBER() OVER (PARTITION BY id ORDER BY total_quantity DESC) AS rank
  FROM 
    top_products
)
SELECT 
  rp.id, 
  rp.name, 
  rp.total_quantity
FROM 
  ranked_products rp 
WHERE 
  rp.rank <= 5
ORDER BY 
  rp.id, 
  rp.rank;


-- Calculate the percentage of revenue generated by each customer in the last quarter: 

WITH order_revenue AS  (
  SELECT 
    oi.order_id, 
    SUM(oi.quantity * oi.price) AS total_revenue
  FROM 
    order_items oi 
    JOIN products p ON oi.product_id = p.id 
  WHERE 
    oi.order_id IN (
      SELECT 
        o.id
      FROM 
        orders o
      WHERE 
        o.order_date >= DATEADD(qq, DATEDIFF(qq, 0, GETDATE()) - 1, 0)
    )
  GROUP BY 
    oi.order_id
)
SELECT 
  c.id, 
  c.name,
  ROUND(SUM(oi.quantity * oi.price) / SUM(order_revenue.total_revenue) * 100, 2) AS revenue_percentage
FROM 
  orders o 
  JOIN customers c ON o.customer_id = c.id 
  JOIN order_items oi ON o.id = oi.order_id 
  JOIN order_revenue  ON o.id = order_revenue.order_id 
GROUP BY 
  c.id, 
  c.name;
  

--  Calculate the retention rate of the company's customers in the last quarter. The retention rate is defined as the percentage of customers who made at least one purchase in the previous quarter and also made at least one purchase in the last quarter. 

WITH previous_quarter_customers AS (
  SELECT DISTINCT customer_id
  FROM orders
  WHERE order_date >= DATEADD(qq, DATEDIFF(qq, 0, GETDATE()) - 2, 0)
    AND order_date < DATEADD(qq, DATEDIFF(qq, 0, GETDATE()) - 1, 0)
),
current_quarter_customers AS (
  SELECT DISTINCT customer_id
  FROM orders
  WHERE order_date >= DATEADD(qq, DATEDIFF(qq, 0, GETDATE()) - 1, 0)
)
SELECT COUNT(DISTINCT cqc.customer_id) * 1.0 / COUNT(DISTINCT pqc.customer_id) * 100 AS retention_rate
FROM previous_quarter_customers pqc
JOIN current_quarter_customers cqc ON pqc.customer_id = cqc.customer_id;












